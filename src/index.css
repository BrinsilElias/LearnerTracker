@import url('https://fonts.googleapis.com/css2?family=Roboto:wght@400;500;700&display=swap');

:root {
  
  --clr-primary: hsl(259, 63%, 59%);
  --clr-neutral-100: hsl(0, 0%, 100%);
  --clr-neutral-200: hsl(195, 11%, 93%);

  --clr-overlay: hsla(0, 0%, 0%, 0.439);

  --clr-text-dark: hsl(220, 43%, 11%);
  --clr-text-light: #667085;
  
  --clr-border: hsl(217, 16%, 84%);
  --clr-link: hsl(221, 83%, 53%);
  --clr-delete: hsl(4, 74%, 49%);
  --clr-save: hsl(153, 96%, 30%);

  --fw-rg: 400;
  --fw-md: 500;
  --fw-bd: 700;
}

/*
  1. Use a more-intuitive box-sizing model.
*/
*, *::before, *::after {
  box-sizing: border-box;
}
/*
  2. Remove default margin
*/
* {
  margin: 0;
}
/*
  3. Allow percentage-based heights in the application
*/
html, body {
  height: 100%;
}
/*
  Typographic tweaks!
  4. Add accessible line-height
  5. Improve text rendering
*/
body {
  line-height: 1.5;
  -webkit-font-smoothing: antialiased;
  font-family: 'Roboto', sans-serif;
}
/*
  6. Improve media defaults
*/
img, picture, video, canvas, svg {
  display: block;
  max-width: 100%;
}
/*
  7. Remove built-in form typography styles
*/
input, button, textarea, select {
  font: inherit;
}
/*
  8. Avoid text overflows
*/
p, h1, h2, h3, h4, h5, h6 {
  overflow-wrap: break-word;
}
/*
  9. Create a root stacking context
*/
#root, #__next {
  isolation: isolate;
}

/* Typography */
h1 {
  font-size: 1.875rem;
  font-weight: var(--fw-md);
  color: var(--clr-text-dark);
}

h2 {
  font-size: 1.25rem;
  font-weight: var(--fw-md);
  color: var(--clr-text-dark);
}

p {
  font-size: 1rem;
  font-weight: var(--fw-rg);
  color: var(--clr-text-light);
}

a {
  text-decoration: none;
  color: var(--clr-link);
}

.xs-text-light {
  font-size: 0.8rem;
  font-weight: var(--fw-rg);
  color: var(--clr-text-light);
  line-height: 1.2;
}

.xs-text-dark {
  font-size: 0.8rem;
  font-weight: var(--fw-rg);
  color: var(--clr-text-dark);
  line-height: 1.2;
}

.small-text {
  font-size: 0.925rem;
  font-weight: var(--fw-rg);
  color: var(--clr-text-light);
}

.medium-text {
  font-size: 1rem;
  font-weight: var(--fw-md);
  color: var(--clr-text-dark);
}

.number {
  margin-bottom: 0.5rem;
  font-size: 2.25rem;
  font-weight: var(--fw-md);
  color: var(--clr-text-dark);
  line-height: 0;
}

.nav-link-text {
  font-size: 0.8rem;
  font-weight: var(--fw-md);
  color: var(--clr-text-dark);
}

label {
  font-size: 0.9rem;
  font-weight: var(--fw-md);
}

input::placeholder {
  font-size: 0.875rem;
  color: var(--clr-text-light);
}

/* Components */
header {
  border-bottom: 1px #EAECF0 solid;
}

.nav-item-2 {
  display: flex;
  gap: 1rem;
  align-items: center;
}

button {
  cursor: pointer;
  border: none;
}

.btn {
  text-decoration: none;
  display: inline-flex;
  gap: 0.5rem;
  justify-content: center;
  align-items: center;

  border: none;
  border-radius: 0.4rem;
  padding: 0.5rem 0.8rem;
  font-size: 0.925rem;
  font-weight: var(--fw-md);
}

input:focus {
  outline: 1.2px solid var(--clr-primary);
}

/* Check Box */
input[type="checkbox"] {
    appearance: none;
    background-color: #fff;
    margin: 0;
    font: inherit;
    color: currentColor;
    width: 1.15em;
    height: 1.15em;
    border: 1.5px solid black;
    border-radius: 0.15em;
    transform: translateY(-0.075em);
    transition: box-shadow 500ms;
}

input[type="checkbox"]:hover {
    box-shadow: hsla(239, 84%, 67%, 0.4) 0px 8px 24px;
}

input[type="checkbox"]:focus {
    outline: none;
}

input[type="checkbox"] {
    /* ...existing styles */
    cursor: pointer;
    display: grid;
    place-content: center;
}
  
input[type="checkbox"]::before {
    content: "";
    width: 0.65em;
    height: 0.65em;
    transform: scale(0);
    transition: 120ms transform ease-in-out;
    box-shadow: inset 1em 1em var(--clr-primary);
}
  
input[type="checkbox"]:checked::before {
    transform: scale(1);
}

select {
  outline: none;
}